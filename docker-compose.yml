services:

  rabbitmq:
    image: bitnami/rabbitmq@sha256:aed08fb7575370fe516bda449a58524fbd7360fa250d4380c09515bd09ec8b50
    ports:
      - 4369:4369
      - 5551:5551
      - 5552:5552
      - 5672:5672
      - 25672:25672
      - 15672:15672
    volumes:
      - ${RABBITMQ_CONF_DIR}:/bitnami/rabbitmq/conf
    environment:
      - RABBITMQ_DISK_FREE_ABSOLUTE_LIMIT=1GB
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3


  logstash_http:
    depends_on:
      rabbitmq:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash-oss:8.1.3
    ports:
      - 8080:8080
    volumes:
      - ${LOGSTASH_PIPELINE_DIR}/http_pipeline/:/usr/share/logstash/pipeline/
    environment:
      - RABBITMQ_HOST=host.docker.internal
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=passw0rd
      - LOGSTASH_HTTP_PORT=8080
  

  siren:
    image: sirensolutions/siren-platform-demo-data:12.1.1
    ports:
      - 5606:5606
      - 9220:9220
    environment:
      - sirenlogs=host


  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=G2
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=G2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U G2"]
      interval: 10s
      timeout: 5s
      retries: 5


  senzing_yumdownloader:
    image: senzing/yumdownloader
    volumes:
      - ${SENZING_RPM_DIR}:/download
    command: senzingdata-v3 senzingapi-3.6.0-23160

  
  senzing_yum:
    depends_on:
      senzing_yumdownloader:
          condition: service_completed_successfully
    image: senzing/yum:1.1.8
    volumes:
      - ${SENZING_VOLUME}/data:/opt/senzing/data
      - ${SENZING_VOLUME}/g2:/opt/senzing/g2
      - ${SENZING_RPM_DIR}:/data
    environment:
      - SENZING_ACCEPT_EULA=I_ACCEPT_THE_SENZING_EULA
    command: -y localinstall /data/senzingdata-v3-3.0.0-22119.x86_64.rpm /data/senzingapi-3.6.0-23160.x86_64.rpm


  senzing_postgres_client:
    depends_on:
      postgres:
        condition: service_healthy
      senzing_yum:
        condition: service_completed_successfully
    image: senzing/postgresql-client
    tty: true
    environment:
      - SENZING_DATABASE_URL=${SENZING_DATABASE_URL}
      - SENZING_SQL_FILES=/opt/senzing/g2/resources/schema/g2core-schema-postgresql-create.sql /app/insert-senzing-configuration.sql
    volumes:
      - ${SENZING_VOLUME}/g2:/opt/senzing/g2
    extra_hosts:
      - "host.docker.internal:host-gateway"
  

  senzing_init_container:
    depends_on:
      senzing_postgres_client:
        condition: service_completed_successfully
    image: senzing/init-container
    user: root
    environment:
      - SENZING_DATABASE_URL=${SENZING_DATABASE_URL}
    volumes:
      - ${SENZING_VOLUME}/data/4.0.1:/opt/senzing/data
      - ${SENZING_VOLUME}/etc:/etc/opt/senzing
      - ${SENZING_VOLUME}/g2:/opt/senzing/g2
      - ${SENZING_VOLUME}/var:/var/opt/senzing
  

  senzing_streamloader:
    depends_on:
      senzing_init_container:
        condition: service_completed_successfully
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    image: senzing/stream-loader
    environment:
      - SENZING_DATA_SOURCE=TEST
      - SENZING_DATABASE_URL=${SENZING_DATABASE_URL}
      - SENZING_ENTITY_TYPE=GENERIC
      - SENZING_LOG_LEVEL=info
      - SENZING_MONITORING_PERIOD_IN_SECONDS=60
      - SENZING_RABBITMQ_HOST=host.docker.internal
      - SENZING_RABBITMQ_PASSWORD=passw0rd
      - SENZING_RABBITMQ_QUEUE=senzing-rabbitmq-queue
      - SENZING_RABBITMQ_ROUTING_KEY=senzing.records
      - SENZING_RABBITMQ_EXCHANGE=senzing-rabbitmq-exchange
      - SENZING_RABBITMQ_USERNAME=user
      - SENZING_SUBCOMMAND=rabbitmq-withinfo
      - SENZING_THREADS_PER_PROCESS=4
      - SENZING_RABBITMQ_USE_EXISTING_ENTITIES=true
      - SENZING_RABBITMQ_HEARTBEAT_IN_SECONDS=10000
    volumes:
      - ${SENZING_VOLUME}/data/4.0.1:/opt/senzing/data
      - ${SENZING_VOLUME}/etc:/etc/opt/senzing
      - ${SENZING_VOLUME}/g2:/opt/senzing/g2
      - ${SENZING_VOLUME}/var:/var/opt/senzing
  

  logstash_senzing:
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash-oss:8.1.3
    volumes:
      - ${LOGSTASH_PIPELINE_DIR}/senzing_pipeline/:/usr/share/logstash/pipeline/
      - ${LOGSTASH_DRIVER_DIR}/postgresql-42.4.0.jar:/usr/share/logstash/postgresql-42.4.0.jar
    environment:
      - RABBITMQ_HOST=host.docker.internal
      - RABBITMQ_USER=user
      - RABBITMQ_PASSWORD=passw0rd
      - DB_HOST=host.docker.internal
      - DB_USER=G2
      - DB_PASSWORD=password
      - ES_USER=sirenadmin
      - ES_PASSWORD=password
      - ES_HOST=host.docker.internal
      - PASSTHROUGH_FIELDS=AMOUNT,STATUS,PRIMARY_NAME_LAST
      - DB_DRIVER_PATH=/usr/share/logstash/postgresql-42.4.0.jar
      - PIPELINE_WORKERS=1
      - PIPELINE_BATCH_SIZE=1
